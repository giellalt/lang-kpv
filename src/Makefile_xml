# ********************************************************************* #
#   This is a makefile that converts xml files to lexc and dictionaries #
# ********************************************************************* #

# Search for prerequisites from the bin-directory.
SHELL = /bin/sh
.SUFFIXES:

# Java variables:
VM = no
JV   = java
MF   = -Xmx1024m
#EF   = -it main # Saxon-B compatible version
EF   = -it:main # Saxon-HE compatible version
XSL  = net.sf.saxon.Transform
SCRIPTS     = ../script
DICT_PATH   = ../../../words/dicts
DICT_BIN    = kom2X/bin
COMPDICT    = collect-dict-parts.xsl
KL2GT       = $(GTLANG)-lex2gtdict.xsl
SRC         = working_files
END         = @echo "Done."
VPATH=../bin

cur-dir   := $(shell pwd)
bin-dir   := $(subst src,bin,$(cur-dir))

tmp-dir = ../../tmp
OUT         = $(tmp-dir)/out

XMLS = $(shell ls $(SRC)/*.xml) 

LEXS := $(patsubst $(SRC)/%.xml,$(OUT)/%.xml.txt,$(wildcard $(SRC)/*.xml))

# All the lexc source files, the last one generated from xml. They are defined
# in this file so that the definition can be shared between xerox and hfst
# Makefiles.
SRCS = $(GTLANG)-lex.txt \
	   noun-$(GTLANG)-morph.txt \
       verb-$(GTLANG)-morph.txt \
       pron-$(GTLANG)-morph.txt \
       punct-$(GTLANG)-lex.txt \
       num-$(GTLANG)-morph.txt \
       acro-$(GTLANG)-lex.txt \
       abbr-$(GTLANG)-lex.txt \
       $(GTLANG)-lex-xmlsrc.txt

# Concatenate all generated LexC files. If there are no usable entries, the
# lexc file will be empty, which is regarded as a fatal error by LexC:
$(GTLANG)-lex-xmlsrc.txt: $(LEXS)
	@echo
	@echo "*** Concatenating generated lexc files into $(@F) ***"
	@echo
	cat $^ > $@

# This target will convert each individual xml file to lexc:
$(OUT)/%.xml.txt: $(SRC)/%.xml $(SCRIPTS)/generate_lex-fileVM.xsl
	@echo
	@echo "*** Generating lexc files for Komi: $(@F) ***"
	@echo
	@mkdir -p $(OUT)
	$(JV) $(MF) $(XSL) $(EF) $(SCRIPTS)/generate_lex-fileVM.xsl \
		inFile=$(cur-dir)/$< > $@

# Generate the lex files
lexfiles: $(XMLS)
	@echo
	@echo "*** Generating lexc files for Komi ***"
	@echo "*** Files: $(XMLS) ***"
	@echo
	@mkdir -p $(OUT)
ifeq ($(VM), yes)
	$(foreach FILE, $(XMLS), $(shell $(JV) $(MF) $(XSL) $(EF) $(SCRIPTS)/generate_lex-fileVM.xsl inFile=$(FILE) > $(OUT)/$(FILE).txt)) 
endif
ifeq ($(VM), no)
	$(JV) $(MF) $(XSL) $(EF) $(SCRIPTS)/generate_lex-file.xsl inDir=../src/working_files outDir=$(OUT)
endif
	@echo
	@echo "*** generated all Komi lexc files in $(OUT). ***"
	@echo

# Start the dict compilation process
# transform the file into gt xml format
macdict: $(GTLANG)-lex.xml

# Compile the dictionary xml-file by unifing the individual pos-files
$(GTLANG)-lex.xml: $(DICT_PATH)/$(DICT_BIN)/$(GTLANG)-lex.xml
$(DICT_PATH)/$(DICT_BIN)/$(GTLANG)-lex.xml: $(SRC)

	@echo
	@echo "*** Converting $(GTLANG)-lex.xml to GT format ***"
	@echo 
	$(JV) $(MF) $(XSL) $(EF) $(SCRIPTS)/$(KL2GT) inDir=../src/$< outDir=$(OUT)
	@echo
	$(END)
	@echo
	@echo "*** Generating the $(GTLANG)-lex.xml file ***"
	@echo "../src/$(OUT)"
	$(JV) $(MF) $(XSL) $(EF) $(SCRIPTS)/$(COMPDICT) dir=../src/$(OUT) > $@
	@echo
	$(END)
	@echo

# lemma_macdict: $(DICT_PATH)/$(BIN)/$(MACDICT)
# $(DICT_PATH)/$(BIN)/$(MACDICT): $(DICT_PATH)/$(BIN)/$(DICT_XML)
# 	@echo
# 	$(BEGIN)
# 	$(JV) $(MF) $(XSL) $< $(SCRIPTS)/$(DICTTOMAC) > $@
# 	@echo
# 	$(END)
# 	@echo
# 	@echo "*** Generating mac-object files ***"
# 	$(JV) $(MF) $(XSL) $(EF) $(SCRIPTS)/$(GEN_INFO) S_LANG=$(S_LANG) T_LANG=$(T_LANG) DATE=$(DATE) > $(DICT_PATH)/$(MACDIR)/$(I_FILE)
# 	@echo
# 	$(JV) $(MF) $(XSL) $(EF) $(SCRIPTS)/$(GEN_MAKE) S_LANG=$(S_LANG) T_LANG=$(T_LANG) DICT_PATH=$(ONE_UP)/$(BIN)/$(MACDICT) > $(DICT_PATH)/$(MACDIR)/$(M_FILE)
# 	@echo
# 	$(END)
# 	@echo "*** Building the mac dictionary ***"
# 	@cd $(DICT_PATH)/$(MACDIR) && make clean; make; make install
# 	@echo
# 	$(END)

# java -Xmx2048m net.sf.saxon.Transform -it main $(GTLANG)-lex2gtdict.xsl inDir=

# java -Xmx2048m net.sf.saxon.Transform -it main collect-dict-parts.xsl dir= > $(GTLANG)-lex.xml
