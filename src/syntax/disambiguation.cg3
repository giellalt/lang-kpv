
# Komi disambiguator

# ========== #
# Delimiters #
# ========== #

DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>" sent ;

#PARENTHESES = "<$(>" "<$)>" "<$[>" "<$]>" "<${>" "<$}>" "<$«>" "<$»>" ;

# ============= #
# Tags and sets #
# ============= #

SETS

# I define end of clause and beginning of clause in a way so that the file
# may be read both by the CG-2 and the vislcg formalisms.

LIST BOS = (>>>) (<s>);
LIST EOS = (<<<) (</s>);

LIST CmpTest = CmpTest ;

LIST Err = Err ; 

LIST N = N ; 
LIST V = V ; 
LIST A = A ; 

LIST Adv = Adv ; 
LIST CC = CC ; 
LIST CS = CS ; 
LIST Interj = Interj interj ij; 
LIST Pron = Pron ; 
LIST Num = Num ; 
LIST Pcle = Pcle ; 
LIST Clt = Clt ; 
LIST Po = Po ; 
LIST Dem = Dem ;
LIST Qnt = Qnt ;
LIST Prop = Prop ;
LIST WORD = N V A Adv CC CS Interj Pron Num Pcle Clt Po ;

LIST VNEG = "ог" "он" "оз" "огӧ" "огӧй" "онӧ" "онӧй" "эг" "эн" "эз" "эгӧ" "эгӧй" "энӧ" "энӧй" ;

LIST Prs = Prs ; 
LIST Fut = Fut ; 
LIST Fut1 = Fut1 ; 
LIST Imprt = Imprt ;
LIST Prt1 = Prt1 ; 
LIST Prt2 = Prt2 ; 
LIST Prf = Prf ; 
LIST PrfIpf = PrfIpf ; 
LIST HstPrf = HstPrf ; 
LIST PluPrf = PluPrf ; 
LIST HstPluPrf = HstPluPrf ; 
LIST Ind = Ind ind ; 
LIST Imp = Imp ; 
LIST Cond = Cond cond ; 
LIST Opt = Opt opt ; 
LIST Sg1 = Sg1 ; 
LIST Sg2 = Sg2 ; 
LIST Sg3 = Sg3 ; 
LIST Pl1 = Pl1 ; 
LIST Pl2 = Pl2 ; 
LIST Pl3 = Pl3 ; 
LIST Inf = Inf ; 
LIST Pos = Pos ; 
LIST Neg = Neg neg ; 
LIST ConNeg = ConNeg conneg; 

LIST Sg = Sg sg ; 
LIST Pl = Pl pl ; 
LIST Nom = Nom nom ; 
LIST Gen = Gen gen ; 
LIST Abl = Abl abl ; 
LIST Dat = Dat dat ; 
LIST Com = Com com ; 
LIST Cns = Cns cns ; 

LIST Acc = Acc acc ; 
LIST Ins = Ins ins ; 
LIST Ine = Ine ine ; 
LIST Ill = Ill ill ; 

LIST Ela = Ela ela ; 
LIST Car = Car car ; 
LIST Egr = Egr egr ; 
LIST Tra = Tra tra ; 

LIST Apr = Apr apr ; 
LIST Ter = Ter ter ; 
LIST Abe = Abe abe ; 
LIST Prl = Prl prl ; 
LIST Cmpl = Cmpl ;
LIST Abs = Abs ;
LIST Attr = Attr ;

LIST HabObj = HabObj ; 
LIST Instr = Instr ; 
LIST Superl = Superl ; 
LIST Comp = Comp ; 

LIST Pers = Pers ;
LIST Refl = Refl ; 
LIST Rel = Rel ; 
LIST Interr = Interr ; 
LIST Recipr = Recipr ; 

LIST PxSg1 = PxSg1 ; 
LIST PxSg2 = PxSg2 ; 
LIST PxSg3 = PxSg3 ; 
LIST PxPl1 = PxPl1 ; 
LIST PxPl2 = PxPl2 ; 
LIST PxPl3 = PxPl3 ; 

LIST Card = Card ; 

LIST Coll = Coll ; 
LIST Comp = Comp ; 

LIST Ord = Ord ; 
LIST Temp = Temp ; 

LIST AN = AN ; 
LIST ANA = ANA ; 
LIST ANAA = ANAA ; 
LIST CHOZH = CHOZH ; 
LIST IG = IG ; 

LIST Instr = Instr ; 

LIST KEZHLO = KEZHLO ; 
LIST MOZ = MOZ ; 
LIST MYS = MYS ; 
LIST MYST = MYST ; 
LIST OM = OM ; 

LIST SOR = SOR ; 
LIST TODZ = TODZ ; 
LIST TYR = TYR ; 
LIST TYRJI = TYRJI ; 

LIST CLB = CLB ; 
LIST PUNCT = PUNCT ; 
LIST ABBR = ABBR ;
LIST LEFT = LEFT ; 
LIST RIGHT = RIGHT ; 
LIST COMMA = "," ;

LIST Der/MWN = Der/MWN ;
LIST Der/са = Der/са ;

LIST CASE = Nom Gen Abl Dat Com Cns Acc Ins Ine Ill Ela Car Egr Tra Apr Ter Abe Prl ;
SET OBLCASE = CASE - Nom ;

SET VFIN = Ind | Cond | Opt ; 

LIST DerTag = Der/MWN Der/И Der/а Der/ал Der/ась Der/выв Der/джык Der/дор Der/иг Der/кежлӧ Der/кодь Der/коста Der/кості Der/л Der/ла Der/ладор Der/лун Der/лы Der/лывлы Der/мед Der/моз Der/мысь Der/мысьт Der/мӧн Der/мӧнъя Der/овт Der/сор Der/сь Der/сьы Der/сюрӧ Der/тыр Der/тырйи Der/тыръя Der/тӧдз Der/тӧм Der/чы Der/чӧж Der/ывлы Der/ысь Der/ышт Der/ӧм ;

LIST ASKI = "аски" "понедельникӧ" "вторникӧ" "середаӧ" "четвергӧ" "пекничаӧ" "субӧтаӧ" "вежалунӧ" "регыд" "аскомысь"; # tomorrow set

SECTION


REMOVE:NoDerIfPossible DerTag ;

SELECT Dem IF (0 Dem)(1 N + Nom);

SELECT:AttrIfN Attr IF (1 N);

# Early, word-internal rules

REMOVE:CmpTst CmpTest IF (NOT 1 N);
SELECT:CmpTst2 CmpTest ; # Kill'em all


# CC or Pcle
# ==========

REMOVE Pcle IF (-1 BOS)(0 CC); # ?
REMOVE CC IF (1 EOS)(0 Pcle);
REMOVE ABBR IF (0 CC)(NOT 1 Prop);

SELECT CC IF (-1 A)(1 A) ;
SELECT CC IF (-1 A)(1 Ins)(2 A) ;

# Derivations
# ==========
REMOVE (Der/MWN N Nom);
REMOVE Der/са IF (0 ("<(.*)са>"r) + A);

# NOMINALS
# Cases
SELECT:Cmpl1 Cmpl IF (1 Po) ;

REMOVE:Cmpl2 Cmpl ;

# Numerals

REMOVE (Abs) IF (0 Der/MWN + N + Sg + Nom);

# Pronouns
REMOVE Interr IF (-2 N)(-1 (","))(0 Rel);


# Adjectives
# ==========

SELECT:AN A + Abs IF (1 N) ;
SELECT:AAN A + Abs IF (0 A)(1 CC)(2 A + Abs) ;

# Прилагательное или существительное

SELECT:ANnotNN	A IF (-1 Adv OR Qnt)(1 N) ;

# Adverbs
# =======

REMOVE:NotSg1IFAdv Sg1 IF (-1 N OR Pron)(0 Adv)(1C Ind)(NOT 1 Sg1);

REMOVE:AdvNotPcle Pcle (0 Adv);

REMOVE:AdvNotA A IF (-1 N or Pron)(0 Adv)(1 V);
	# ме регыд муна
	
SELECT Adv + Rel IF (-1 COMMA)(*1 VFIN);

REMOVE:InitialAdv A IF (-1 BOS)(0 Adv)(NOT 1 N OR CC OR A) ;


# Verbs
# =====

# Select оз that are nouns if only we were able to find them
SELECT:OzKatastrof N IF (0 ("оз"))(1 ("чӧскыд"));
# ... другие законы для существителное

# if not, we give in and go for the V reading
REMOVE:KillOzN N IF (0 ("оз"));
	# оз - зэв чӧскыд тусь.

# Neg
# Pl if ConNeg Pl3
SELECT:NegPlIfConNegPl Neg + Pl3 IF (1 ConNeg + Pl3);

# Not Pl if not ConNeg Pl3
REMOVE:NegSgIfNotConNegPl Neg + Pl3 IF (NOT 1 ConNeg + Pl3);

SELECT:NegIfConNeg Neg IF (1 ConNeg OR Adv);
	# оз тырмы
	
# First or third person


REMOVE:1not3inPast (Prt1 Sg3) IF (*-1 (Pers Sg1 Nom) BARRIER N + Nom OR Pers + Sg3 + Nom)(0 (V Prt1 Sg1));

REMOVE:3not1inPast (Prt1 Sg1) IF (NOT *0 (Pers Sg1 Nom)) ;
# This may be too strong, it precludes zero Sg1 subjects

# ConNeg or not
REMOVE:NoNegForMe ConNeg IF (NOT *-1 Neg BARRIER CLB);
REMOVE:OtherConNeg ConNeg IF (-1* ConNeg BARRIER Neg);

SELECT:OnlyConNeg ConNeg IF (-1C Neg)(NOT *1 ConNeg) ;


# Imperative or noun

REMOVE:NotImpWhenInd Imprt IF (*-1C Ind);
REMOVE:NotImpWhenWords Imprt IF (-1 N)(0 N);
REMOVE:NotImpWhenWords Imprt IF (-1 WORD LINK *-1 BOS BARRIER Imprt);

# ConNeg Sg/Pl
REMOVE Pl2 IF (0 Neg + Sg2)(1 ConNeg)(NOT 1 Pl2) ;

# Prs or Fut
#SELECT Fut IF сегодня (...)
SELECT:Fut Fut IF (-1 ASKI);
SELECT:Fut Fut IF (1 ASKI);
REMOVE:KillFut Fut IF (0 Prs);

# да

SELECT:DaAdv1 Adv IF (-1 BOS)(0 ("да"))(1 EOS OR COMMA);
## Да, я знаю

REMOVE:DaAdv2 Adv IF (0 ("да"));
## Коми да мари

SELECT:DaPcle Pcle IF (0 ("да"))(-1 Pcle)(1 EOS OR COMMA);
SELECT:DaCS CS IF (0 ("да"))(1 COMMA OR EOS);
SELECT:Daa&b CC IF (-1 N) (0 ("да"))(1 N);
SELECT:Daa&b CC IF (-1 V) (0 ("да"))(1 V);
SELECT:Daa&b CC IF (-1 A) (0 ("да"))(1 A);

# и
REMOVE ABBR IF (0 CC)(NOT 1 ("."));
REMOVE Pcle IF (-1 N + $$CASE)(1 N + $$CASE);

REMOVE Interj IF (NOT 1* ("!") BARRIER COMMA) ;

REMOVE Acc IF (0C Nom OR Acc) (NOT *-1 VFIN BARRIER BOS) (NOT *-1 VFIN BARRIER EOS);
# REMOVE Acc IF (0C Nom OR Acc) (NOT -1* VFIN BARRIER BOS) (NOT -1* VFIN BARRIER EOS);

REMOVE:NotNomIfVFINLeft Nom IF (-1 V) (*-1 VFIN BARRIER BOS);

# Predicative

SELECT A IF (*-1 ("вӧвны") BARRIER N);


# Mapping

SELECT Acc IF (-1 Po) (1 CC);
#...чужанін дорӧ муслун да...

