! This file is a script for the Xerox xfst interface.
! It gives the morphophonological rules for Komi.


! In this file, testcases are marked as follows:

! space exclmark euro space upper:lower
! Please add tests for eventual new rules or problems

! To test: in kt/kom/src, do: 
! xfst -e "source xfst-kom.txt"
! 
! save s
! quit
! cat xfst-kom.txt | grep €|cut -d" " -f3|cut -d":" -f1|lookup s


clear stack


!! Definition section !
!! ================== !


echo << THE DEFININTIONS >>

echo << defining Vow >>
!! Defining Vowel
define Vow [ а | и | і | о | ӧ | у | ы | э 
           | А | И | І | О | Ӧ | У | Ы | Э
           | я | и | е | ё | ю ];

!! Defining Palatal Vowel
define PalVow  [ е | ё | ю | я         ! Cns-initial vowels
               | Е | Ё | Ю | Я ];

!! Defining Consonants
echo << defining Cns >>
define Cns [ б | в | г | д | ж | з 
           | Б | В | Г | Д | Ж | З 
           | й | к | л | м | н | п | р | с | т | ф | х | ц 
           | Й | К | Л | М | Н | П | Р | С | Т | Ф | Х | Ц 
           | ч | ш | щ | ъ | ь 
           | Ч | Ш | Щ | Ъ | Ь 
           | к2 | л2 | м2 | т2 | ь2
           | К2 | Л2 | М2 | Т2 | Ь2 ] ;

!! Defining non-soft consonants
define CnsNotSoft [ б | в | г | д | ж | з 
                  | Б | В | Г | Д | Ж | З 
                  | й | к | л | м | н | п | р | с | т | ф | х | ц 
                  | Й | К | Л | М | Н | П | Р | С | Т | Ф | Х | Ц 
                  | ч | ш | щ | ъ | к2 | л2 | м2 | т2
                  | Ч | Ш | Щ | Ъ | К2 | Л2 | М2 | Т2 ] ;

!! Defining consonants before Cyrillic і                  
define CnsBeforeCyri [ б | в | г | ж | й | к | м | п  
                     | Б | Б | Г | Ж | Й | К | М | П       
                     | р | ф | х | ч | ш | щ | к2 | м2 | т2       
                     | Р | Ф | Х | Ч | Ш | Щ | К2 | М2 | Т2 ] ;   
                     ! Only certain cons. are allowed before Cyr i 
      
!! Defining letters
define Letter [ Vow | Cns ] ;      


define Syll [ ( Cns ) ( Cns ) Vow ( Cns ) ( Cns ) ] ;      ! Hmm, not needed now.

!! Defining flags
define Flags [ %@U%.CONJ%-INF%.YES%@ | %@U%.CONJ%-INF%.NO%@ 
             | %@U%.CONJ%-TX%.FUT%@ | %@U%.CONJ%-TX%.PRES%@ 
             | %@U%.CONJ%-TX%.PRET1%@ | %@U%.CONJ%-TX%.PRET2%@
             | %@U%.CONJ%-MX%.IND%@ | %@U%.CONJ%-MX%.IMP%@ 
             | %@U%.CONJ%-CONNEG%.YES%@ | %@U%.CONJ%-CONNEG%.NO%@
             | %@U%.CONJ%-NX%.PL%@ | %@U%.CONJ%-NX%.SG%@
             | %@U%.CONJ%-PX%.1%@ | %@U%.CONJ%-PX%.2%@ 
             | %@U%.CONJ%-PX%.3%@ | %@C%.CONJ%-INF%@
             | %@C%.CONJ%-TX%@ | %@C%.CONJ%-MX%@ 
             | %@C%.CONJ%-CONNEG%@ | %@C%.CONJ%-NX%@
             | %@C%.CONJ%-PX%@ ] ; ! This includes a list of all the flags used
     ! in serial verbs

!! Defining boundaries
echo << defining Boundary >>

define Boundary %> ;

!! Defining diacritics
define Diacritics [ %^Inf | %^PATR | %^FEM ] ;

!! Defining dummy
define Dummy [ Boundary | Diacritics ] ;


!! Rule section !
!! ============ !

echo << defining the rules >>


! The famous L/V
! --------------

define LtoV [ л -> в || _ Flags* [ .#. | %> Cns ] ] ;
 ! These words are underlyingly l, and changed to v.
 !€ ныл>ыс:нылыс
 !€ ныл:ныв
 !€ ныл>сӧ:нывсӧ
 
! Paragogic consonants
! --------------------

  ! These are consonants that are visible in front of vowel-initial suffixes.
  ! Here, we say that 

define mDeletion м -> 0 || н _  [ .#. | %> Cns ] ;
 !€ синм>ыс:синмыс
 !€ синм:син
 !€ синм>сӧ:синсӧ

define kDeletion к -> 0 || [ с | ш | с ь | с ь2 | ч] _ [.#. | %> Cns] ; 
 !€ воск>ыс:воскыс
 !€ воск:вос
 !€ воск>сӧ:воссӧ
 !€ кось2к>сянь:косьсянь

define tDeletion т -> 0 || п _ [.#. | %> Cns] ;
 !€ зепт>ыс:зептыс
 !€ зепт:зеп
 !€ зепт>сӧ:зепсӧ

define jDeletion й -> 0 || [б | в | г | д | ж | з | к | м | н | п | р | т | с]
                             _ [.#. | %> Cns] ;
 !€ гобй>ыс:гобйыс
 !€ гобй:гоб
 !€ гобй>сӧ:гобсӧ
 !€ кывй>ыс:кывйыс
 !€ кывй:кыв
 !€ кывй>сӧ:кывсӧ


define jDeletionBeforeA [ й Flags* %> Flags* а ->   я || Vow _ ,, 
                          й Flags* %> Flags* а -> ъ я || Cns _ ] ; !2011-10-10
 !€ вый>а:выя
 !€ кывй>а:кывъя
 !€ сёй>а:сёя
 !€ кӧсй>а:кӧсъя

!define jDeletionBeforeI [ й Flags* %> Flags* і ->  и || Vow _ ] ;
!2013-05-28

define lDeletion л -> 0 || л _  ь       [ .#. | %> Cns ] ;
 !€ вакулль>ыс:вакулльыс
 !€ вакулль:вакуль
 !€ вакулль>сӧ:вакульсӧ
  
  
define dDeletion д -> 0 || д _ [ь | з]  [ .#. | %> Cns ] ;
 !€ виддз>ыс:виддзыс
 !€ виддз:видз
 !€ виддз>сӧ:видзсӧ

!define Surnames [ и й %^FEM %> a -> а я ] ;


define VowelPalatalisation  [ а -> я, о -> ё, у -> ю  || 
                            [~[ д з | ч ]] [ ь | й ] Flags* %> Flags* _ ] ;
 !€ вой>ас:вояс
 !€ озй>ас:озъяс
 !€ ворссь>а:ворсся
 !€ картопель>ас:картопеляс (Px3)
 !€ картопель>ъяс:картопельяс (Pl)
! Have to look for ь>о:ё, 
! ь>у:ю appears in compound words                      

define iPalatalisation [ і -> и || [ Vow | CnsBeforeCyri | й | ь | д з ] Flags* %> Flags*  _ ] ;

 !€ ворссь>і:ворсси
 !€ ло>і:лои
 !€ шу>іс:шуис
 !€ вай>іс:вайис
 !For some reason this does not work

define SoftMarkDeletion [ ь -> 0 || _ Flags* %> [ я | ё | ю | и ] ,, 
                          ь -> 0 || с _ Flags* %> с [ ь | я ] ] ; 
! Testcases: see VowelPalatalisation above
! Also orthography _Коми орфография кывкуд 2008: 9_
! ь2, Ь2 will be used to mark special instances of _ь_ retension
 !€ велӧдысь>сянь:велӧдыссянь
 !€ велӧдысь>сьыс:велӧдыссьыс
  

define HardMarkDeletion ъ -> 0 || [ Vow (й) | ь ] %> _ ;
 !€ вой>ъяс:войяс
 !€ выль>ъяс:выльяс
 !€ коми>ъяс:комияс
 !€ автобус>ъяс:автобусъяс

  
define HardMarkPalatalisation ъ -> ь || [ д з | ч ] %> _ ;
 !€ виддз>ъяс:видзьяс
 
define NoTrippleLetters [ с -> 0 || с _ %> с ,,
                          т -> 0 || т _ %> т ,,
                          л -> 0 || л _ %> л ] ;
! Also orthography _Коми орфография кывкуд 2008: 16_
 !€ класс>сянь:классянь
 !€ Блатт>тӧг:Блаттӧг
 !€ металл>лӧн:металлӧн

define IClitic [ И2 (->) й || Vow %- _ .#. ] ;

echo << defining cleanup rules >>

define Cleanup ӧ2 -> ӧ, е2 -> е, о2 -> о, к2 -> к, л2 -> л, м2 -> м, т2 -> т,
               Ӧ2 -> Ӧ, Е2 -> Е, О2 -> О, К2 -> К, Л2 -> Л, М2 -> М, Т2 -> Т, 
               ь2 -> ь, Ь2 -> Ь , И2 -> и ;

define Deletion [ %@ -> 0 ] ;

define DummyDeletion [ Dummy -> 0 ] ;

! Then we compose the different rules. !
! ==================================== !

echo << composing different parts >>

read regex [ 
    LtoV
.o. mDeletion
.o. kDeletion
.o. tDeletion
.o. jDeletion
.o. jDeletionBeforeA
!.o. jDeletionBeforeI
.o. lDeletion
.o. dDeletion
!.о. Surnames
.o. VowelPalatalisation
.o. iPalatalisation
.o. SoftMarkDeletion
.o. HardMarkDeletion
.o. HardMarkPalatalisation
.o. NoTrippleLetters
.o. IClitic
.o. Cleanup
.o. Deletion
.o. DummyDeletion
] ;










! Some old code, sfuffed down here. Delete if you feel for it:

!! stopping ы -> 0 2011-01-26
!define WeakVowDeletion ы -> 0 || \[ н ы ] _ %> Vow ;
 ! anything but "ny" may preceede the deleted segment.
 ! Consider this: "ы:0" ы:0 <=> V1: + Cns:* _ %+: V1 ;
 !! LET's remember that this should only affect verb forms
 !! That means the surface vowels я а и і ӧ
 !! Wrong results тӧд where тыӧд should be
 !! Wrong на should be ныа
 !! Absence of "ы" vowel
 !! "ы" vowel is present before
 ! a) _ ны
 ! b) _ 0 ="+Imp+Sg2"
 ! c) _ 0 ="CONNEG"
 
! Working around й%>а => ъя
! We need й -> ъ
! We need а -> я
! Look at VowelPalatalisation, below
! Environment: || [~[ [ з | ч ] | д з ]] [ ь | й ] %> _ ;
! How does this deal with й -> ъ change
! кывъя кыв+N+Der/а+A stem кывъ
! кӧсъя кӧсйыны+V+Ind+Prs+Sg1, кӧсйыны+V+Ind+Fut+Sg1



